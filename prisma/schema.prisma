generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  TPToken          String?   @unique
  SEJWT            String?   @db.Text
  minimumGiftSubs  Int       @default(3)
  minimumTipAmount Int       @default(5)
  managers         Json?
  accounts         Account[]
  sessions         Session[]
  wheels           Wheel[]
}

model Wheel {
  id       String       @id @default(cuid())
  userId   String
  isActive Boolean      @default(false)
  user     User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  prizes   WheelPrize[]
}

model WheelPrize {
  id      String  @id @default(cuid())
  wheelId String
  name    String
  image   String?
  wheel   Wheel   @relation(fields: [wheelId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Log {
  id        String   @id @default(cuid())
  type      LogType  @default(INFO)
  createdAt DateTime @default(now())
  value     String
}

enum LogType {
  INFO
  WARN
  ERR
}
